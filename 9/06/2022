 3. Translate each of the following mathematical expressions into an equivalent Python expression. You may assume that the math
#     library has been imported (via import math).
#     a) (3 + 4)(5)                    ->
#     b) (n(n-1))/2                    ->
#     c) 4pir^2                        ->
#     d) sqrt(r(cosa)^2 + r(sinb)^2)   ->
#     e) (y2 - y1) / (x2 - x1)         ->


 4. Show the sequence of numbers that would be generated by each of the following range expressions.
#     a) range(5)                      -> [0, 1, 2, 3, 4]
#     b) range(3,5)                    -> [3, 4]
#     c) range(4,13,3)                 -> [4, 7, 10]
#     d) range(15,5,-2)                -> [15, 13, 11, 9, 7]
#     e) range(5,3)                    -> []


 5. A program that computes the molecular weight of a carbohydrate (in grams per mole) based on the number
of hydrogen, carbon, and oxygen atoms in the molecule. The program prompts the user to enter the carbo structure. 
"""


def main():

    print("This program computes the molecular weight of carbohydrates [grams/mole]")

    # allow the user to enter its own carbohydrate_structure - m and n
    carbohydrate_structure = input("Enter the specific carbohydrate in the form Cm(H2O)n: ")
    carbon_atoms = int(carbohydrate_structure[1])
    hydrogen_atoms = int(carbohydrate_structure[-1]) * 2
    oxygen_atoms = int(carbohydrate_structure[-1])

    # enter the individual weights of the atoms [grams/mole]
    carbon_weight = 12.0107
    hydrogen_weight = 1.00794
    oxygen_weight = 15.9994

    # compute the molecular weight of the carbohydrate
    molecular_weight = carbon_atoms * carbon_weight + hydrogen_atoms * hydrogen_weight + oxygen_atoms * oxygen_weight
    print()
    print(f"The molecular weight of the {carbohydrate_structure} carbohydrate is {format(molecular_weight, ',.5f')}")


# call main
if __name__ == '__main__':
    main()
    
1.#converting decimal to binary by taking user input and
#select input [1]
#start



decimal = int(input("enter decimal value: \n"))
convert = int(input("convert into: [1] binary: \n"))

if convert == 1:
    print("converted to binary \n", bin(decimal))
else:
     print("pleas review your input")

2evaluate = eval(input("enter the expression you want to evaluate"))
print("the value of this expression is",evaluate)


 
    
